//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Orleans.Samples.Hello2012.Grains
{
    using System;
    using System.Collections.Generic;
    using Orleans;
    using Orleans.Runtime.Coordination;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-ClientGenerator", "1.0.785.51083")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [Orleans.MethodInvokerAttribute("Orleans.Samples.Hello2012.Grains.HelloEchoGrain")]
    public class HelloEchoGrainMethodInvoker : IGrainMethodInvoker
    {
        
        static HelloEchoGrainMethodInvoker()
        {
            Orleans.Serialization.SerializationManager.Register(typeof(HelloEchoGrainMethodInvoker));
        }
        
        public async System.Threading.Tasks.Task<Object> Invoke(IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {
                if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1567424528:  // IHelloEchoTaskGrain
                        switch (methodId)
                        {
                            case 123897784: 
                                return await ((Orleans.Samples.Hello2012.GrainInterfaces.IHelloEchoTaskGrain)grain).LastEchoAsync;
                            case -794762012: 
                                return await ((Orleans.Samples.Hello2012.GrainInterfaces.IHelloEchoTaskGrain)grain).EchoHelloAsync((String)arguments[0]);
                            default: 
                                throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1567424528:  // IHelloEchoTaskGrain
                    switch (methodId)
                    {
                        case 123897784:
                            return "get_LastEchoAsync";
                    case -794762012:
                            return "EchoHelloAsync";
                    case -1274273377:
                            return "GetProperties";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
}
